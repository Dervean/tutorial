{
  "status": 0,
  "statusCode": 200,
  "payload": {
    "id": "9016"
  },
  "userInfo": {
    "login": "wangdeyun",
    "name": "王德运",
    "role": "owner",
    "orgId": "12345",
    "orgName": "name"
  },
  "data": [
    {
      "id": 56155,
      "mis": "wangdeyun",
      "app_id": 9016,
      "sub_app_id": 0,
      "target": "newtest",
      "value": {
        "refType": "branch",
        "envs": [],
        "name": "泳道",
        "branch": "master",
        "tag": "",
        "appkey": "",
        "commit": "",
        "pipeline": [
          {
            "id": 578,
            "mis": "baijingwen",
            "maintainers": "ouyifeng",
            "name": "PR审批检测",
            "title": "PR审批检测",
            "desc": "用于检测PR是否修改重点模块，如果修改重点模块是否得到审批人approve",
            "builtin": false,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "url": "",
              "command": "",
              "oneCommand": "curl https://msstest.sankuai.com/v1/mss_9bce4d589987467a8c9dd94b130a3432/ciscript/pr-check-test.js | node",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [
              {
                "type": "input",
                "sourceType": "json",
                "key": "REPO_PR_ID",
                "title": "本次PR的ID",
                "optional": false
              },
              {
                "type": "input",
                "sourceType": "json",
                "key": "MODULE_CHECK_LIST",
                "title": "审批人映射列表地址",
                "desc": "核心模块与审批人映射表url，结构可参考：http://s3plus.vip.sankuai.com/v1/mss_fdf7a41aad474b02bd6c37a481cac860/dyna-cdn/schemas/dist/EB_APPROVERS.json",
                "value": "http://s3plus.vip.sankuai.com/v1/mss_fdf7a41aad474b02bd6c37a481cac860/dyna-cdn/schemas/dist/EB_APPROVERS.json"
              }
            ],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2020-08-03T10:17:39.783Z",
            "updated_at": "2020-08-17T08:11:52.000Z",
            "config": {
              "MODULE_CHECK_LIST": "https://s3plus.meituan.net/v1/mss_fdf7a41aad474b02bd6c37a481cac860/dyna-cdn/MTA/dist/test_cp_check.json"
            }
          },
          {
            "id": 2,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Git",
            "title": "代码克隆",
            "desc": "git clone",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "jenkensInit",
              "command": "Git",
              "oneCommand": "",
              "multiCommand": "sh 'printenv'\nsh 'git init ${WORKSPACE}'\ntry {\n    sh 'git remote add origin ${AWP_GIT_REPO}'\n} catch (e) {\n    sh 'git config remote.origin.url ${AWP_GIT_REPO}'\n}\nif(env. AWP_GIT_REF_TYPE.equals('branch')){\n  sh 'git fetch origin ${AWP_GIT_BRANCH_NAME} --no-tag --depth=1'\n  try {\n     // 清空暂存区和已跟踪并产生修改的文件\n    sh 'git checkout -f'\n  } catch (e) {\n      echo 'no need to clean'\n  }\n  // 递归删除所有未跟踪的文件和文件夹\n  sh 'git clean -fd'\n  sh 'git checkout ${AWP_GIT_BRANCH_NAME}'\n  sh 'git reset --hard origin/${AWP_GIT_BRANCH_NAME}'\n  // 清理 submodule 缓存\n  sh 'git submodule deinit --all -f'\n  // 初始化并拉取 submodule\n  sh 'git submodule init'\n  sh 'git submodule update'\n} else if (env. AWP_GIT_REF_TYPE.equals('tag')) {\n  sh 'git fetch origin tag ${AWP_GIT_TAG} --depth=1'\n  try {\n    sh 'git checkout -f'\n  } catch (e) {\n    echo 'no need to clean'\n  }\n  sh 'git clean -fd'\n  sh 'git checkout ${AWP_GIT_TAG}'\n  sh 'git submodule deinit --all -f'\n  sh 'git submodule init'\n  sh 'git submodule update'\n} else if (env. AWP_GIT_REF_TYPE.equals('commit')) {\n  echo 'do not support commit id'\n  error('do not support commit id')\n} else {\n  echo 'should pass branch name or tag name'\n  error('should pass branch name or tag name')\n}\n\nsh 'git config --global user.email \"hfe_stash@meituan.com\"'\nsh 'git config --global user.name \"hfe_stash\"'",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.597Z",
            "updated_at": "2021-01-19T11:08:31.000Z",
            "config": {}
          },
          {
            "id": 3,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Yarn",
            "title": "安装依赖",
            "desc": "安装 node_modules",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "defaultHandler",
              "command": "Preparation",
              "oneCommand": "",
              "multiCommand": "sh '''\necho \"151.101.108.133   raw.githubusercontent.com\" >> /etc/hosts\ncat /etc/hosts\n\ncacheType=''\n\ntimeout(){\n        waitfor=600\n        command=$*\n        sleeppid=$PPID\n        ($command) &amp;\n        commandpid=$!\n        ( sleep $waitfor ; kill -9 $commandpid) &amp;\n        watchdog=$!\n        wait $commandpid > /dev/null 2>&amp;1\n        commandcode=$?\n        echo \"依赖安装执行状态码上报：$commandcode\"\n        if [ $commandcode -eq 1 ] || [ $commandcode -eq 137 ]\n        then\n             echo '安装依赖发生错误'\n             kill  -9 $watchdog > /dev/null 2>&amp;1\n\t         exit 1\n        fi\n        kill  -9 $watchdog > /dev/null 2>&amp;1\n}\n\ninstall(){\n    if [ $cacheType = 'yarn-cache' ]\n    then\n        yarn install --production=false \n    else\n        mnpm install --production=false\n    fi\n    \n}\n\nmakeCacheType(){\n    if [ -e 'yarn.lock' ];\n\tthen\n\t\tcacheType='yarn-cache'\n\telif [ -e 'package-lock.json' -o -e 'npm-shrinkwrap.json' ];\n\tthen\n\t\tcacheType='npm-cache'\n\telse\n\t\tcacheType='yarn-cache'\n\tfi\n}\n\ncacheClean() {\n    echo \"尝试清理依赖缓存\"\n    # 后台执行清理项目依赖\n    ( rm -rf node_modules ) &amp;\n    # 后台执行清理 yarn or mnpm 全局缓存\n    if [ $cacheType = 'yarn-cache' ]\n    then\n        ( yarn cache clean ) &amp;\n    else\n        ( mnpm cache clean --force ) &amp;\n    fi\n    wait\n    echo \"缓存清理完成\"\n}\n\ncd ${projectRoot:-.}\n\nmakeCacheType\n\nif [ -e node_modules ];\nthen\n    echo \"node_modules exist will not get cache\"\nelse\n    if [ -e /bin/get-cache ];\n    then\n        get-cache $cacheType\n    fi\nfi\n\n( \n  timeout install\n) || (\n  echo 'Yarn RUN Something Error, Try Again'\n  cacheClean\n  timeout install\n) || (\n  echo 'Yarn RUN Something Error, Try Third'\n  cacheClean\n  timeout install\n)\n\n'''",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.612Z",
            "updated_at": "2022-03-09T06:40:43.000Z",
            "config": {}
          },
          {
            "id": 4,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Lint",
            "title": "代码检查",
            "desc": "执行 npm run lint，请确保项目中存在该命令",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "service": "defaultHandler",
              "command": "Lint",
              "oneCommand": "cd ${projectRoot:-.} && npm run lint",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.625Z",
            "updated_at": "2019-05-27T02:31:49.000Z",
            "config": {}
          },
          {
            "id": 5,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Test",
            "title": "测试",
            "desc": "执行 npm run test，请确保项目中存在该命令",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "service": "defaultHandler",
              "command": "Test",
              "oneCommand": "cd ${projectRoot:-.} && npm run test",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.637Z",
            "updated_at": "2019-05-27T02:31:57.000Z",
            "config": {}
          },
          {
            "id": 6,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Build",
            "title": "构建",
            "desc": "执行 yarn run build，请确保项目中存在该命令",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "defaultHandler",
              "command": "Build",
              "oneCommand": "",
              "multiCommand": "sh '''#!/bin/bash\n\ncd ${projectRoot:-.}\nrm -rf build/\n\n\n\nif [ ! -d node_modules/.cache ];then\n  echo 'node_modules/.cache  not  exist'\n  if [ -e /bin/get-cache ];\n    then\n        get-cache build-cache\n    fi\n  \nelse\n  echo 'node_modules/.cache  exist'\n  ls node_modules/.cache\nfi\n\nif [ \"`jq \".scripts.build\" package.json`\" = \"null\" ]; then \n  if [ \"$AWP_DEPLOY_ENV\" = \"production\" ]; then\n    yarn run gulp build\n  else\n    yarn run gulp build:prepub\n  fi\nelse\n  yarn run build\nfi\n'''",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.649Z",
            "updated_at": "2021-08-11T03:41:40.000Z",
            "config": {}
          },
          {
            "id": 158,
            "mis": "hante",
            "maintainers": "",
            "name": "Standards",
            "title": "标准化水平统计 & 卡控",
            "desc": "标准化水平统计 & 卡控",
            "builtin": false,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "url": "/plugin3rd/standardLevel",
              "command": "",
              "oneCommand": "curl https://awp-assets.sankuai.com/hfe/talos-plugins/services/standards/index.js | node",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2019-05-28T04:42:49.403Z",
            "updated_at": "2022-08-22T13:41:21.000Z",
            "config": {}
          },
          {
            "id": 89,
            "mis": "yuanxiang.yang",
            "maintainers": "huangbaojun,wuyawei02",
            "name": "POM-MIDDLEWARE",
            "title": "中间件采集",
            "desc": "收集项目依赖及相关信息，可用于依赖升级周知",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "url": "",
              "command": "",
              "oneCommand": "",
              "multiCommand": "sh '''\n  echo \"10.4.5.56     cm.sankuai.com\" >> /etc/hosts\n  cd ${projectRoot:-.}\n  curl https://awp-assets.sankuai.com/nibfe/talos-plugins-code-scanner/pomMiddleware.js | node\n    echo \"remainder=\\\\$((AWP_FLOW_ID % 10))\necho \"remainder \\\\${remainder}\"\nif (( \\\\$remainder >= 0)); then\n  curl https://s3plus.sankuai.com/v1/mss_55f12fa2cfcf4ec080d69868a087b2c0/devtools-common/talos.997a3ff1a60305e016db.bundle.js | node\n  else echo 'no check'\nfi\" | bash\n'''",
              "scope": [],
              "private": false
            },
            "schema": [
              {
                "type": "input",
                "sourceType": "json",
                "key": "COLLECT_CATKEY_TYPE",
                "value": "1",
                "desc": "单项目采集catkey：1，批量采集catkey：2"
              }
            ],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2019-02-14T02:16:34.410Z",
            "updated_at": "2022-09-22T03:43:07.000Z",
            "config": {
              "COLLECT_CATKEY_TYPE": "1"
            }
          },
          {
            "id": 7,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "CAT",
            "title": "CAT SDK 扫描",
            "desc": "检测您的应用是否接入 CAT SDK(Owl)",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "service": "defaultHandler",
              "command": "CAT",
              "oneCommand": "",
              "multiCommand": "sh '''#!/bin/bash\ncd ${projectRoot:-.}\nif grep -l -r \"_Owl_\" build/; then\n  echo \"CAT SDK found in Project\"\n  exit 0\nelif grep -l -r \"Owl.start\" build/; then\n  echo \"CAT SDK found in Project\"\n  exit 0\nelif grep -l -r \"start({project\" build/; then\n  echo \"CAT SDK found in Project\"\n  exit 0\nelse\n  echo \"CAT SDK NOT found in Project\"\n  exit 1\nfi\n'''",
              "scope": [
                "web"
              ],
              "private": false
            },
            "schema": [],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.663Z",
            "updated_at": "2019-02-27T06:55:43.000Z",
            "config": {}
          },
          {
            "id": 9,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Upload",
            "title": "上传代码包",
            "desc": "将构建产物 build 打包暂存到 S3，用于发布和回滚流程。【不要删我~】",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "defaultHandler",
              "command": "Upload",
              "oneCommand": "",
              "multiCommand": "sh 'cd ${projectRoot:-.} &amp;&amp; zip -r /root/jenkins/build/build.zip build/'\nsh 'STAGE_STATUS=pending node /root/jenkins/awp-upload.js'",
              "scope": [
                "web",
                "Docs",
                "other",
                "Cortex",
                "Peon",
                "Serverless",
                "Nine",
                "NPM",
                "Rome-Project",
                "MTFlutter",
                "Max",
                "DDD"
              ],
              "private": false
            },
            "schema": [],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.687Z",
            "updated_at": "2022-11-17T07:37:33.000Z",
            "config": {}
          },
          {
            "id": 12,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Publish",
            "title": "AWP 发布",
            "desc": "将构建产物部署到 S3，并提供默认的 awp 域名",
            "builtin": true,
            "plugin_type": "service",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "publish",
              "command": "",
              "oneCommand": "",
              "multiCommand": "",
              "scope": [
                "web",
                "Docs",
                "other",
                "NPM",
                "Serverless",
                "Peon",
                "Rome-Project",
                "Cortex",
                "MTFlutter",
                "Max",
                "DDD"
              ],
              "private": false
            },
            "schema": [],
            "hook": "deploy",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.725Z",
            "updated_at": "2022-11-17T06:59:17.000Z",
            "config": {}
          },
          {
            "id": 13,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "HumanCheck",
            "title": "人工验证",
            "desc": "发布后，一定时间内进行人工验证并给出反馈【该插件不会自动回滚】",
            "builtin": true,
            "plugin_type": "service",
            "plugin_biz_type": "check",
            "skip": false,
            "params": {
              "service": "humanCheck",
              "command": "",
              "oneCommand": "",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "after-deploy",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.737Z",
            "updated_at": "2020-03-17T06:44:19.000Z",
            "config": {}
          }
        ],
        "status": "normal"
      },
      "type": "",
      "business_type": "web",
      "isDeleted": false,
      "created_at": "2021-07-29T11:21:37.311Z",
      "updated_at": "2021-08-03T02:52:17.000Z",
      "isLock": false
    },
    {
      "id": 55378,
      "mis": "wangdeyun",
      "app_id": 9016,
      "sub_app_id": 0,
      "target": "production",
      "value": {
        "name": "production",
        "envs": [],
        "pipeline": [
          {
            "id": 217,
            "mis": "zhangyuchen",
            "maintainers": "zhengziqiang",
            "name": "TL-Publish",
            "title": "TL-Publish",
            "desc": "到店终端，发布权限收归，只允许 TL 进行发布",
            "builtin": false,
            "plugin_type": "service",
            "plugin_biz_type": "approve",
            "skip": false,
            "params": {
              "url": "https://inf-faas.vip.sankuai.com/api/talos-plugin-tl-publish/trigger",
              "command": "",
              "oneCommand": "",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [
              {
                "type": "misInput",
                "sourceType": "json",
                "key": "rd_mis",
                "desc": "TL 触发发布，由发布跟进人进行发布结果验证。",
                "optional": true
              }
            ],
            "hook": "before-all",
            "isDeleted": false,
            "created_at": "2019-08-12T09:31:15.821Z",
            "updated_at": "2021-10-19T07:29:02.000Z",
            "config": {}
          },
          {
            "id": 578,
            "mis": "baijingwen",
            "maintainers": "ouyifeng",
            "name": "PR审批检测",
            "title": "PR审批检测",
            "desc": "用于检测PR是否修改重点模块，如果修改重点模块是否得到审批人approve",
            "builtin": false,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "url": "",
              "command": "",
              "oneCommand": "curl https://msstest.sankuai.com/v1/mss_9bce4d589987467a8c9dd94b130a3432/ciscript/pr-check-test.js | node",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [
              {
                "type": "input",
                "sourceType": "json",
                "key": "REPO_PR_ID",
                "title": "本次PR的ID",
                "optional": false
              },
              {
                "type": "input",
                "sourceType": "json",
                "key": "MODULE_CHECK_LIST",
                "title": "审批人映射列表地址",
                "desc": "核心模块与审批人映射表url，结构可参考：http://s3plus.vip.sankuai.com/v1/mss_fdf7a41aad474b02bd6c37a481cac860/dyna-cdn/schemas/dist/EB_APPROVERS.json",
                "value": "http://s3plus.vip.sankuai.com/v1/mss_fdf7a41aad474b02bd6c37a481cac860/dyna-cdn/schemas/dist/EB_APPROVERS.json"
              }
            ],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2020-08-03T10:17:39.783Z",
            "updated_at": "2020-08-17T08:11:52.000Z",
            "config": {
              "MODULE_CHECK_LIST": "http://s3plus.vip.sankuai.com/v1/mss_fdf7a41aad474b02bd6c37a481cac860/dyna-cdn/schemas/dist/EB_APPROVERS.json"
            }
          },
          {
            "id": 2,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Git",
            "title": "代码克隆",
            "desc": "git clone",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "jenkensInit",
              "command": "Git",
              "oneCommand": "",
              "multiCommand": "sh 'printenv'\nsh 'git init ${WORKSPACE}'\ntry {\n    sh 'git remote add origin ${AWP_GIT_REPO}'\n} catch (e) {\n    sh 'git config remote.origin.url ${AWP_GIT_REPO}'\n}\nif(env. AWP_GIT_REF_TYPE.equals('branch')){\n  sh 'git fetch origin ${AWP_GIT_BRANCH_NAME} --no-tag --depth=1'\n  try {\n     // 清空暂存区和已跟踪并产生修改的文件\n    sh 'git checkout -f'\n  } catch (e) {\n      echo 'no need to clean'\n  }\n  // 递归删除所有未跟踪的文件和文件夹\n  sh 'git clean -fd'\n  sh 'git checkout ${AWP_GIT_BRANCH_NAME}'\n  sh 'git reset --hard origin/${AWP_GIT_BRANCH_NAME}'\n  // 清理 submodule 缓存\n  sh 'git submodule deinit --all -f'\n  // 初始化并拉取 submodule\n  sh 'git submodule init'\n  sh 'git submodule update'\n} else if (env. AWP_GIT_REF_TYPE.equals('tag')) {\n  sh 'git fetch origin tag ${AWP_GIT_TAG} --depth=1'\n  try {\n    sh 'git checkout -f'\n  } catch (e) {\n    echo 'no need to clean'\n  }\n  sh 'git clean -fd'\n  sh 'git checkout ${AWP_GIT_TAG}'\n  sh 'git submodule deinit --all -f'\n  sh 'git submodule init'\n  sh 'git submodule update'\n} else if (env. AWP_GIT_REF_TYPE.equals('commit')) {\n  echo 'do not support commit id'\n  error('do not support commit id')\n} else {\n  echo 'should pass branch name or tag name'\n  error('should pass branch name or tag name')\n}\n\nsh 'git config --global user.email \"hfe_stash@meituan.com\"'\nsh 'git config --global user.name \"hfe_stash\"'",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.597Z",
            "updated_at": "2021-01-19T11:08:31.000Z",
            "config": {}
          },
          {
            "id": 3,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Yarn",
            "title": "安装依赖",
            "desc": "安装 node_modules",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "defaultHandler",
              "command": "Preparation",
              "oneCommand": "",
              "multiCommand": "sh '''\necho \"151.101.108.133   raw.githubusercontent.com\" >> /etc/hosts\ncat /etc/hosts\n\ncacheType=''\n\ntimeout(){\n        waitfor=600\n        command=$*\n        sleeppid=$PPID\n        ($command) &amp;\n        commandpid=$!\n        ( sleep $waitfor ; kill -9 $commandpid) &amp;\n        watchdog=$!\n        wait $commandpid > /dev/null 2>&amp;1\n        commandcode=$?\n        echo \"依赖安装执行状态码上报：$commandcode\"\n        if [ $commandcode -eq 1 ] || [ $commandcode -eq 137 ]\n        then\n             echo '安装依赖发生错误'\n             kill  -9 $watchdog > /dev/null 2>&amp;1\n\t         exit 1\n        fi\n        kill  -9 $watchdog > /dev/null 2>&amp;1\n}\n\ninstall(){\n    if [ $cacheType = 'yarn-cache' ]\n    then\n        yarn install --production=false \n    else\n        mnpm install --production=false\n    fi\n    \n}\n\nmakeCacheType(){\n    if [ -e 'yarn.lock' ];\n\tthen\n\t\tcacheType='yarn-cache'\n\telif [ -e 'package-lock.json' -o -e 'npm-shrinkwrap.json' ];\n\tthen\n\t\tcacheType='npm-cache'\n\telse\n\t\tcacheType='yarn-cache'\n\tfi\n}\n\ncacheClean() {\n    echo \"尝试清理依赖缓存\"\n    # 后台执行清理项目依赖\n    ( rm -rf node_modules ) &amp;\n    # 后台执行清理 yarn or mnpm 全局缓存\n    if [ $cacheType = 'yarn-cache' ]\n    then\n        ( yarn cache clean ) &amp;\n    else\n        ( mnpm cache clean --force ) &amp;\n    fi\n    wait\n    echo \"缓存清理完成\"\n}\n\ncd ${projectRoot:-.}\n\nmakeCacheType\n\nif [ -e node_modules ];\nthen\n    echo \"node_modules exist will not get cache\"\nelse\n    if [ -e /bin/get-cache ];\n    then\n        get-cache $cacheType\n    fi\nfi\n\n( \n  timeout install\n) || (\n  echo 'Yarn RUN Something Error, Try Again'\n  cacheClean\n  timeout install\n) || (\n  echo 'Yarn RUN Something Error, Try Third'\n  cacheClean\n  timeout install\n)\n\n'''",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.612Z",
            "updated_at": "2022-03-09T06:40:43.000Z",
            "config": {}
          },
          {
            "id": 372,
            "mis": "chenwei41",
            "maintainers": "zhangfang10,hante,chenwei41,hujing13,sunhuacheng,qianjin.pan,fuhaoliang",
            "name": "Rome-Check",
            "title": "Rome-Check",
            "desc": "研发框架中负责规范校验的插件",
            "builtin": false,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "url": "",
              "command": "",
              "oneCommand": "",
              "multiCommand": "sh \"curl https://awp-assets.sankuai.com/nibfe/rome-cli/rome-check/index.js | node\"",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2020-02-03T09:51:10.629Z",
            "updated_at": "2021-04-02T03:00:09.000Z",
            "config": {}
          },
          {
            "id": 4,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Lint",
            "title": "代码检查",
            "desc": "执行 npm run lint，请确保项目中存在该命令",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "service": "defaultHandler",
              "command": "Lint",
              "oneCommand": "cd ${projectRoot:-.} && npm run lint",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.625Z",
            "updated_at": "2019-05-27T02:31:49.000Z",
            "config": {}
          },
          {
            "id": 5,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Test",
            "title": "测试",
            "desc": "执行 npm run test，请确保项目中存在该命令",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "service": "defaultHandler",
              "command": "Test",
              "oneCommand": "cd ${projectRoot:-.} && npm run test",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.637Z",
            "updated_at": "2019-05-27T02:31:57.000Z",
            "config": {}
          },
          {
            "id": 6,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Build",
            "title": "构建",
            "desc": "执行 yarn run build，请确保项目中存在该命令",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "defaultHandler",
              "command": "Build",
              "oneCommand": "",
              "multiCommand": "sh '''#!/bin/bash\n\ncd ${projectRoot:-.}\nrm -rf build/\n\n\n\nif [ ! -d node_modules/.cache ];then\n  echo 'node_modules/.cache  not  exist'\n  if [ -e /bin/get-cache ];\n    then\n        get-cache build-cache\n    fi\n  \nelse\n  echo 'node_modules/.cache  exist'\n  ls node_modules/.cache\nfi\n\nif [ \"`jq \".scripts.build\" package.json`\" = \"null\" ]; then \n  if [ \"$AWP_DEPLOY_ENV\" = \"production\" ]; then\n    yarn run gulp build\n  else\n    yarn run gulp build:prepub\n  fi\nelse\n  yarn run build\nfi\n'''",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.649Z",
            "updated_at": "2021-08-11T03:41:40.000Z",
            "config": {}
          },
          {
            "id": 158,
            "mis": "hante",
            "maintainers": "",
            "name": "Standards",
            "title": "标准化水平统计 & 卡控",
            "desc": "标准化水平统计 & 卡控",
            "builtin": false,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "url": "/plugin3rd/standardLevel",
              "command": "",
              "oneCommand": "curl https://awp-assets.sankuai.com/hfe/talos-plugins/services/standards/index.js | node",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2019-05-28T04:42:49.403Z",
            "updated_at": "2022-08-22T13:41:21.000Z",
            "config": {}
          },
          {
            "id": 89,
            "mis": "yuanxiang.yang",
            "maintainers": "huangbaojun,wuyawei02",
            "name": "POM-MIDDLEWARE",
            "title": "中间件采集",
            "desc": "收集项目依赖及相关信息，可用于依赖升级周知",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "url": "",
              "command": "",
              "oneCommand": "",
              "multiCommand": "sh '''\n  echo \"10.4.5.56     cm.sankuai.com\" >> /etc/hosts\n  cd ${projectRoot:-.}\n  curl https://awp-assets.sankuai.com/nibfe/talos-plugins-code-scanner/pomMiddleware.js | node\n    echo \"remainder=\\\\$((AWP_FLOW_ID % 10))\necho \"remainder \\\\${remainder}\"\nif (( \\\\$remainder >= 0)); then\n  curl https://s3plus.sankuai.com/v1/mss_55f12fa2cfcf4ec080d69868a087b2c0/devtools-common/talos.997a3ff1a60305e016db.bundle.js | node\n  else echo 'no check'\nfi\" | bash\n'''",
              "scope": [],
              "private": false
            },
            "schema": [
              {
                "type": "input",
                "sourceType": "json",
                "key": "COLLECT_CATKEY_TYPE",
                "value": "1",
                "desc": "单项目采集catkey：1，批量采集catkey：2"
              }
            ],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2019-02-14T02:16:34.410Z",
            "updated_at": "2022-09-22T03:43:07.000Z",
            "config": {
              "COLLECT_CATKEY_TYPE": "1"
            }
          },
          {
            "id": 9,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Upload",
            "title": "上传代码包",
            "desc": "将构建产物 build 打包暂存到 S3，用于发布和回滚流程。【不要删我~】",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "defaultHandler",
              "command": "Upload",
              "oneCommand": "",
              "multiCommand": "sh 'cd ${projectRoot:-.} &amp;&amp; zip -r /root/jenkins/build/build.zip build/'\nsh 'STAGE_STATUS=pending node /root/jenkins/awp-upload.js'",
              "scope": [
                "web",
                "Docs",
                "other",
                "Cortex",
                "Peon",
                "Serverless",
                "Nine",
                "NPM",
                "Rome-Project",
                "MTFlutter",
                "Max",
                "DDD"
              ],
              "private": false
            },
            "schema": [],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.687Z",
            "updated_at": "2022-11-17T07:37:33.000Z",
            "config": {}
          },
          {
            "id": 84,
            "mis": "zhangyuchen",
            "maintainers": "zhengziqiang",
            "name": "Canary",
            "title": "灰度发布",
            "desc": "灰度发布",
            "builtin": true,
            "plugin_type": "service",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "url": "http://talos-api.sankuai.com/plugin3rd/canaryPublish",
              "command": "",
              "oneCommand": "",
              "multiCommand": "",
              "scope": [
                "web",
                "Peon",
                "Max"
              ],
              "private": true
            },
            "schema": [],
            "hook": "canary-deploy",
            "isDeleted": false,
            "created_at": "2019-01-15T05:48:03.079Z",
            "updated_at": "2022-09-05T07:56:34.000Z",
            "config": {}
          },
          {
            "id": 85,
            "mis": "zhangyuchen",
            "maintainers": "",
            "name": "CanaryCheck",
            "title": "灰度发布确认上线或下线",
            "desc": "灰度发布确认上线或下线",
            "builtin": true,
            "plugin_type": "service",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "url": "",
              "service": "defaultHandler",
              "command": "",
              "oneCommand": "",
              "multiCommand": "",
              "scope": [
                "web",
                "Peon",
                "Max"
              ],
              "private": true
            },
            "schema": [],
            "hook": "canary-deploy",
            "isDeleted": false,
            "created_at": "2019-01-15T05:48:43.021Z",
            "updated_at": "2022-09-05T07:56:49.000Z",
            "config": {}
          },
          {
            "id": 12,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Publish",
            "title": "AWP 发布",
            "desc": "将构建产物部署到 S3，并提供默认的 awp 域名",
            "builtin": true,
            "plugin_type": "service",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "publish",
              "command": "",
              "oneCommand": "",
              "multiCommand": "",
              "scope": [
                "web",
                "Docs",
                "other",
                "NPM",
                "Serverless",
                "Peon",
                "Rome-Project",
                "Cortex",
                "MTFlutter",
                "Max",
                "DDD"
              ],
              "private": false
            },
            "schema": [],
            "hook": "deploy",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.725Z",
            "updated_at": "2022-11-17T06:59:17.000Z",
            "config": {}
          },
          {
            "id": 13,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "HumanCheck",
            "title": "人工验证",
            "desc": "发布后，一定时间内进行人工验证并给出反馈【该插件不会自动回滚】",
            "builtin": true,
            "plugin_type": "service",
            "plugin_biz_type": "check",
            "skip": false,
            "params": {
              "service": "humanCheck",
              "command": "",
              "oneCommand": "",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "after-deploy",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.737Z",
            "updated_at": "2020-03-17T06:44:19.000Z",
            "config": {}
          }
        ],
        "branch": "master",
        "status": "normal"
      },
      "type": "",
      "business_type": "Rome-Project",
      "isDeleted": false,
      "created_at": "2021-07-22T08:26:31.606Z",
      "updated_at": "2022-05-12T12:34:59.000Z",
      "isLock": false
    },
    {
      "id": 55380,
      "mis": "wangdeyun",
      "app_id": 9016,
      "sub_app_id": 0,
      "target": "test01",
      "value": {
        "name": "test01",
        "envs": [],
        "pipeline": [
          {
            "id": 2,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Git",
            "title": "代码克隆",
            "desc": "git clone",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "jenkensInit",
              "command": "Git",
              "oneCommand": "",
              "multiCommand": "sh 'printenv'\nsh 'git init ${WORKSPACE}'\ntry {\n    sh 'git remote add origin ${AWP_GIT_REPO}'\n} catch (e) {\n    sh 'git config remote.origin.url ${AWP_GIT_REPO}'\n}\nif(env. AWP_GIT_REF_TYPE.equals('branch')){\n  sh 'git fetch origin ${AWP_GIT_BRANCH_NAME} --no-tag --depth=1'\n  try {\n     // 清空暂存区和已跟踪并产生修改的文件\n    sh 'git checkout -f'\n  } catch (e) {\n      echo 'no need to clean'\n  }\n  // 递归删除所有未跟踪的文件和文件夹\n  sh 'git clean -fd'\n  sh 'git checkout ${AWP_GIT_BRANCH_NAME}'\n  sh 'git reset --hard origin/${AWP_GIT_BRANCH_NAME}'\n  // 清理 submodule 缓存\n  sh 'git submodule deinit --all -f'\n  // 初始化并拉取 submodule\n  sh 'git submodule init'\n  sh 'git submodule update'\n} else if (env. AWP_GIT_REF_TYPE.equals('tag')) {\n  sh 'git fetch origin tag ${AWP_GIT_TAG} --depth=1'\n  try {\n    sh 'git checkout -f'\n  } catch (e) {\n    echo 'no need to clean'\n  }\n  sh 'git clean -fd'\n  sh 'git checkout ${AWP_GIT_TAG}'\n  sh 'git submodule deinit --all -f'\n  sh 'git submodule init'\n  sh 'git submodule update'\n} else if (env. AWP_GIT_REF_TYPE.equals('commit')) {\n  echo 'do not support commit id'\n  error('do not support commit id')\n} else {\n  echo 'should pass branch name or tag name'\n  error('should pass branch name or tag name')\n}\n\nsh 'git config --global user.email \"hfe_stash@meituan.com\"'\nsh 'git config --global user.name \"hfe_stash\"'",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.597Z",
            "updated_at": "2021-01-19T11:08:31.000Z",
            "config": {}
          },
          {
            "id": 3,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Yarn",
            "title": "安装依赖",
            "desc": "安装 node_modules",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "defaultHandler",
              "command": "Preparation",
              "oneCommand": "",
              "multiCommand": "sh '''\necho \"151.101.108.133   raw.githubusercontent.com\" >> /etc/hosts\ncat /etc/hosts\n\ncacheType=''\n\ntimeout(){\n        waitfor=600\n        command=$*\n        sleeppid=$PPID\n        ($command) &amp;\n        commandpid=$!\n        ( sleep $waitfor ; kill -9 $commandpid) &amp;\n        watchdog=$!\n        wait $commandpid > /dev/null 2>&amp;1\n        commandcode=$?\n        echo \"依赖安装执行状态码上报：$commandcode\"\n        if [ $commandcode -eq 1 ] || [ $commandcode -eq 137 ]\n        then\n             echo '安装依赖发生错误'\n             kill  -9 $watchdog > /dev/null 2>&amp;1\n\t         exit 1\n        fi\n        kill  -9 $watchdog > /dev/null 2>&amp;1\n}\n\ninstall(){\n    if [ $cacheType = 'yarn-cache' ]\n    then\n        yarn install --production=false \n    else\n        mnpm install --production=false\n    fi\n    \n}\n\nmakeCacheType(){\n    if [ -e 'yarn.lock' ];\n\tthen\n\t\tcacheType='yarn-cache'\n\telif [ -e 'package-lock.json' -o -e 'npm-shrinkwrap.json' ];\n\tthen\n\t\tcacheType='npm-cache'\n\telse\n\t\tcacheType='yarn-cache'\n\tfi\n}\n\ncacheClean() {\n    echo \"尝试清理依赖缓存\"\n    # 后台执行清理项目依赖\n    ( rm -rf node_modules ) &amp;\n    # 后台执行清理 yarn or mnpm 全局缓存\n    if [ $cacheType = 'yarn-cache' ]\n    then\n        ( yarn cache clean ) &amp;\n    else\n        ( mnpm cache clean --force ) &amp;\n    fi\n    wait\n    echo \"缓存清理完成\"\n}\n\ncd ${projectRoot:-.}\n\nmakeCacheType\n\nif [ -e node_modules ];\nthen\n    echo \"node_modules exist will not get cache\"\nelse\n    if [ -e /bin/get-cache ];\n    then\n        get-cache $cacheType\n    fi\nfi\n\n( \n  timeout install\n) || (\n  echo 'Yarn RUN Something Error, Try Again'\n  cacheClean\n  timeout install\n) || (\n  echo 'Yarn RUN Something Error, Try Third'\n  cacheClean\n  timeout install\n)\n\n'''",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.612Z",
            "updated_at": "2022-03-09T06:40:43.000Z",
            "config": {}
          },
          {
            "id": 372,
            "mis": "chenwei41",
            "maintainers": "zhangfang10,hante,chenwei41,hujing13,sunhuacheng,qianjin.pan,fuhaoliang",
            "name": "Rome-Check",
            "title": "Rome-Check",
            "desc": "研发框架中负责规范校验的插件",
            "builtin": false,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "url": "",
              "command": "",
              "oneCommand": "",
              "multiCommand": "sh \"curl https://awp-assets.sankuai.com/nibfe/rome-cli/rome-check/index.js | node\"",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2020-02-03T09:51:10.629Z",
            "updated_at": "2021-04-02T03:00:09.000Z",
            "config": {}
          },
          {
            "id": 4,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Lint",
            "title": "代码检查",
            "desc": "执行 npm run lint，请确保项目中存在该命令",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "service": "defaultHandler",
              "command": "Lint",
              "oneCommand": "cd ${projectRoot:-.} && npm run lint",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.625Z",
            "updated_at": "2019-05-27T02:31:49.000Z",
            "config": {}
          },
          {
            "id": 5,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Test",
            "title": "测试",
            "desc": "执行 npm run test，请确保项目中存在该命令",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "service": "defaultHandler",
              "command": "Test",
              "oneCommand": "cd ${projectRoot:-.} && npm run test",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.637Z",
            "updated_at": "2019-05-27T02:31:57.000Z",
            "config": {}
          },
          {
            "id": 6,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Build",
            "title": "构建",
            "desc": "执行 yarn run build，请确保项目中存在该命令",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "defaultHandler",
              "command": "Build",
              "oneCommand": "",
              "multiCommand": "sh '''#!/bin/bash\n\ncd ${projectRoot:-.}\nrm -rf build/\n\n\n\nif [ ! -d node_modules/.cache ];then\n  echo 'node_modules/.cache  not  exist'\n  if [ -e /bin/get-cache ];\n    then\n        get-cache build-cache\n    fi\n  \nelse\n  echo 'node_modules/.cache  exist'\n  ls node_modules/.cache\nfi\n\nif [ \"`jq \".scripts.build\" package.json`\" = \"null\" ]; then \n  if [ \"$AWP_DEPLOY_ENV\" = \"production\" ]; then\n    yarn run gulp build\n  else\n    yarn run gulp build:prepub\n  fi\nelse\n  yarn run build\nfi\n'''",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.649Z",
            "updated_at": "2021-08-11T03:41:40.000Z",
            "config": {}
          },
          {
            "id": 158,
            "mis": "hante",
            "maintainers": "",
            "name": "Standards",
            "title": "标准化水平统计 & 卡控",
            "desc": "标准化水平统计 & 卡控",
            "builtin": false,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "url": "/plugin3rd/standardLevel",
              "command": "",
              "oneCommand": "curl https://awp-assets.sankuai.com/hfe/talos-plugins/services/standards/index.js | node",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2019-05-28T04:42:49.403Z",
            "updated_at": "2022-08-22T13:41:21.000Z",
            "config": {}
          },
          {
            "id": 193,
            "mis": "qianjin.pan",
            "maintainers": "zhukaijian,hujing13,wujing31,chenwei41, zoujiale",
            "name": "rome-risk-check",
            "title": "【研发框架基础依赖风险检测插件】",
            "desc": "研发框架核心依赖changlog进行解析，研发框架工程依赖变更风险提示",
            "builtin": false,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "url": "",
              "command": "",
              "oneCommand": "",
              "multiCommand": "sh '''\ncurl https://awp-assets.sankuai.com/nibfe/rome-utils/main-staging/mappings.wasm > mappings.wasm\ncurl https://awp-assets.sankuai.com/nibfe/rome-utils/main-staging/index.js | node\n'''",
              "scope": [],
              "private": false
            },
            "schema": [
              {
                "type": "checkbox",
                "sourceType": "json",
                "key": "ROME_FORCED_ES5",
                "title": "是否强制卡控产物ES5语法",
                "desc": "勾选后，如Build产物中包含非ES5语法，将阻塞发布流程"
              }
            ],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2019-07-12T03:26:23.993Z",
            "updated_at": "2022-05-16T01:56:50.000Z",
            "config": {}
          },
          {
            "id": 443,
            "mis": "zhangfeng19",
            "maintainers": "zhangfeng19,chenwei41,qiyufei,yuansongchao",
            "name": "TAM-asset-parser",
            "title": "资产管理平台资产解析",
            "desc": "解析研发框架类型项目中的资产https://km.sankuai.com/page/303660519",
            "builtin": false,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "url": "",
              "command": "",
              "oneCommand": "yarn global add @nibfe/asset-parse-talos-plugin@latest --dev && tam-parse",
              "multiCommand": "",
              "scope": [
                "web",
                "Rome-Project",
                "Rome-Component",
                "Peon",
                "NPM",
                "WebStatic",
                "other"
              ],
              "private": false
            },
            "schema": [
              {
                "type": "input",
                "sourceType": "json",
                "key": "tam_env",
                "value": "prod",
                "desc": "上报资产信息到线上或线下环境(prod / beta)的资产管理平台",
                "title": ""
              },
              {
                "type": "input",
                "sourceType": "json",
                "key": "tam_sub_dir",
                "optional": true,
                "desc": "需要解析的工程子目录",
                "title": ""
              },
              {
                "type": "input",
                "sourceType": "json",
                "desc": "重写资产解析的配置信息，json字符串类型，见https://km.sankuai.com/page/344614711",
                "title": "",
                "key": "tam_parse_config",
                "optional": true
              },
              {
                "type": "input",
                "sourceType": "json",
                "key": "tam_mode",
                "optional": true,
                "value": "async"
              }
            ],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2020-04-08T07:34:59.081Z",
            "updated_at": "2022-09-19T03:16:15.000Z",
            "config": {
              "tam_env": "prod",
              "tam_mode": "async"
            }
          },
          {
            "id": 89,
            "mis": "yuanxiang.yang",
            "maintainers": "huangbaojun,wuyawei02",
            "name": "POM-MIDDLEWARE",
            "title": "中间件采集",
            "desc": "收集项目依赖及相关信息，可用于依赖升级周知",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "url": "",
              "command": "",
              "oneCommand": "",
              "multiCommand": "sh '''\n  echo \"10.4.5.56     cm.sankuai.com\" >> /etc/hosts\n  cd ${projectRoot:-.}\n  curl https://awp-assets.sankuai.com/nibfe/talos-plugins-code-scanner/pomMiddleware.js | node\n    echo \"remainder=\\\\$((AWP_FLOW_ID % 10))\necho \"remainder \\\\${remainder}\"\nif (( \\\\$remainder >= 0)); then\n  curl https://s3plus.sankuai.com/v1/mss_55f12fa2cfcf4ec080d69868a087b2c0/devtools-common/talos.997a3ff1a60305e016db.bundle.js | node\n  else echo 'no check'\nfi\" | bash\n'''",
              "scope": [],
              "private": false
            },
            "schema": [
              {
                "type": "input",
                "sourceType": "json",
                "key": "COLLECT_CATKEY_TYPE",
                "value": "1",
                "desc": "单项目采集catkey：1，批量采集catkey：2"
              }
            ],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2019-02-14T02:16:34.410Z",
            "updated_at": "2022-09-22T03:43:07.000Z",
            "config": {
              "COLLECT_CATKEY_TYPE": "1"
            }
          },
          {
            "id": 7,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "CAT",
            "title": "CAT SDK 扫描",
            "desc": "检测您的应用是否接入 CAT SDK(Owl)",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "service": "defaultHandler",
              "command": "CAT",
              "oneCommand": "",
              "multiCommand": "sh '''#!/bin/bash\ncd ${projectRoot:-.}\nif grep -l -r \"_Owl_\" build/; then\n  echo \"CAT SDK found in Project\"\n  exit 0\nelif grep -l -r \"Owl.start\" build/; then\n  echo \"CAT SDK found in Project\"\n  exit 0\nelif grep -l -r \"start({project\" build/; then\n  echo \"CAT SDK found in Project\"\n  exit 0\nelse\n  echo \"CAT SDK NOT found in Project\"\n  exit 1\nfi\n'''",
              "scope": [
                "web"
              ],
              "private": false
            },
            "schema": [],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.663Z",
            "updated_at": "2019-02-27T06:55:43.000Z",
            "config": {}
          },
          {
            "id": 9,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Upload",
            "title": "上传代码包",
            "desc": "将构建产物 build 打包暂存到 S3，用于发布和回滚流程。【不要删我~】",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "defaultHandler",
              "command": "Upload",
              "oneCommand": "",
              "multiCommand": "sh 'cd ${projectRoot:-.} &amp;&amp; zip -r /root/jenkins/build/build.zip build/'\nsh 'STAGE_STATUS=pending node /root/jenkins/awp-upload.js'",
              "scope": [
                "web",
                "Docs",
                "other",
                "Cortex",
                "Peon",
                "Serverless",
                "Nine",
                "NPM",
                "Rome-Project",
                "MTFlutter",
                "Max",
                "DDD"
              ],
              "private": false
            },
            "schema": [],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.687Z",
            "updated_at": "2022-11-17T07:37:33.000Z",
            "config": {}
          },
          {
            "id": 12,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Publish",
            "title": "AWP 发布",
            "desc": "将构建产物部署到 S3，并提供默认的 awp 域名",
            "builtin": true,
            "plugin_type": "service",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "publish",
              "command": "",
              "oneCommand": "",
              "multiCommand": "",
              "scope": [
                "web",
                "Docs",
                "other",
                "NPM",
                "Serverless",
                "Peon",
                "Rome-Project",
                "Cortex",
                "MTFlutter",
                "Max",
                "DDD"
              ],
              "private": false
            },
            "schema": [],
            "hook": "deploy",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.725Z",
            "updated_at": "2022-11-17T06:59:17.000Z",
            "config": {}
          }
        ],
        "branch": "develop"
      },
      "type": "",
      "business_type": "Rome-Project",
      "isDeleted": false,
      "created_at": "2021-07-22T08:26:31.702Z",
      "updated_at": "2021-07-22T08:26:31.702Z",
      "isLock": false
    }
  ]
}
