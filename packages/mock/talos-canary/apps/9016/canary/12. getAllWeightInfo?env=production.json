{
  "status": 0,
  "statusCode": 200,
  "payload": {
    "env": "production",
    "app_id": "9016"
  },
  "userInfo": {
    "login": "wangdeyun",
    "name": "王德运",
    "role": "member",
    "orgId": "12345",
    "orgName": "name"
  },
  "data": [
    {
      "weight": 0,
      "canaryInstance": {
        "id": 19602,
        "app_id": 9016,
        "flow_id": 3618477,
        "aegis_app_id": "14",
        "aegis_api_id": "-1",
        "percentage": 0,
        "percentage_range": "[\n  0,\n  20\n]",
        "login_model": "",
        "login_id": "",
        "status": "online",
        "origin_query": "315eb3a0-9f7c-41b9-af39-4890e3f2f9a6",
        "canary_query": "ffa95ea6-e698-40ea-a6b3-d73aab1d3767",
        "op": "wangdeyun",
        "config": "{\n  \"cookiePath\": \"/\",\n  \"canaryStages\": [\n    {\n      \"dateTime\": \"\",\n      \"percentage\": 1\n    }\n  ],\n  \"canaryPreLimit\": 0,\n  \"whitelistStrategies\": [],\n  \"canaryRangeLimit\": 20,\n  \"whitelistCanary\": false,\n  \"accountWhiteList\": []\n}",
        "online_time": "2022-11-28T09:14:08.000Z",
        "offline_time": "2022-11-28T09:14:08.000Z",
        "subAppId": "0",
        "created_at": "2022-11-28T09:14:08.720Z",
        "updated_at": "2022-11-28T09:16:14.000Z"
      },
      "flowInfo": {
        "id": 3618477,
        "app_id": 9016,
        "sub_app_id": 0,
        "cid": 55378,
        "app_name": "test-talos-project",
        "op": "wangdeyun",
        "tenantId": 1,
        "pipeline": [
          {
            "id": 2,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Git",
            "title": "代码克隆",
            "desc": "git clone",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "jenkensInit",
              "command": "Git",
              "oneCommand": "",
              "multiCommand": "sh 'printenv'\nsh 'git init ${WORKSPACE}'\ntry {\n    sh 'git remote add origin ${AWP_GIT_REPO}'\n} catch (e) {\n    sh 'git config remote.origin.url ${AWP_GIT_REPO}'\n}\nif(env. AWP_GIT_REF_TYPE.equals('branch')){\n  sh 'git fetch origin ${AWP_GIT_BRANCH_NAME} --no-tag --depth=1'\n  try {\n     // 清空暂存区和已跟踪并产生修改的文件\n    sh 'git checkout -f'\n  } catch (e) {\n      echo 'no need to clean'\n  }\n  // 递归删除所有未跟踪的文件和文件夹\n  sh 'git clean -fd'\n  sh 'git checkout ${AWP_GIT_BRANCH_NAME}'\n  sh 'git reset --hard origin/${AWP_GIT_BRANCH_NAME}'\n  // 清理 submodule 缓存\n  sh 'git submodule deinit --all -f'\n  // 初始化并拉取 submodule\n  sh 'git submodule init'\n  sh 'git submodule update'\n} else if (env. AWP_GIT_REF_TYPE.equals('tag')) {\n  sh 'git fetch origin tag ${AWP_GIT_TAG} --depth=1'\n  try {\n    sh 'git checkout -f'\n  } catch (e) {\n    echo 'no need to clean'\n  }\n  sh 'git clean -fd'\n  sh 'git checkout ${AWP_GIT_TAG}'\n  sh 'git submodule deinit --all -f'\n  sh 'git submodule init'\n  sh 'git submodule update'\n} else if (env. AWP_GIT_REF_TYPE.equals('commit')) {\n  echo 'do not support commit id'\n  error('do not support commit id')\n} else {\n  echo 'should pass branch name or tag name'\n  error('should pass branch name or tag name')\n}\n\nsh 'git config --global user.email \"hfe_stash@meituan.com\"'\nsh 'git config --global user.name \"hfe_stash\"'",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.597Z",
            "updated_at": "2021-01-19T11:08:31.000Z",
            "config": {}
          },
          {
            "id": 3,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Yarn",
            "title": "安装依赖",
            "desc": "安装 node_modules",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "defaultHandler",
              "command": "Preparation",
              "oneCommand": "",
              "multiCommand": "sh '''\necho \"151.101.108.133   raw.githubusercontent.com\" >> /etc/hosts\ncat /etc/hosts\n\ncacheType=''\n\ntimeout(){\n        waitfor=600\n        command=$*\n        sleeppid=$PPID\n        ($command) &amp;\n        commandpid=$!\n        ( sleep $waitfor ; kill -9 $commandpid) &amp;\n        watchdog=$!\n        wait $commandpid > /dev/null 2>&amp;1\n        commandcode=$?\n        echo \"依赖安装执行状态码上报：$commandcode\"\n        if [ $commandcode -eq 1 ] || [ $commandcode -eq 137 ]\n        then\n             echo '安装依赖发生错误'\n             kill  -9 $watchdog > /dev/null 2>&amp;1\n\t         exit 1\n        fi\n        kill  -9 $watchdog > /dev/null 2>&amp;1\n}\n\ninstall(){\n    if [ $cacheType = 'yarn-cache' ]\n    then\n        yarn install --production=false \n    else\n        mnpm install --production=false\n    fi\n    \n}\n\nmakeCacheType(){\n    if [ -e 'yarn.lock' ];\n\tthen\n\t\tcacheType='yarn-cache'\n\telif [ -e 'package-lock.json' -o -e 'npm-shrinkwrap.json' ];\n\tthen\n\t\tcacheType='npm-cache'\n\telse\n\t\tcacheType='yarn-cache'\n\tfi\n}\n\ncacheClean() {\n    echo \"尝试清理依赖缓存\"\n    # 后台执行清理项目依赖\n    ( rm -rf node_modules ) &amp;\n    # 后台执行清理 yarn or mnpm 全局缓存\n    if [ $cacheType = 'yarn-cache' ]\n    then\n        ( yarn cache clean ) &amp;\n    else\n        ( mnpm cache clean --force ) &amp;\n    fi\n    wait\n    echo \"缓存清理完成\"\n}\n\ncd ${projectRoot:-.}\n\nmakeCacheType\n\nif [ -e node_modules ];\nthen\n    echo \"node_modules exist will not get cache\"\nelse\n    if [ -e /bin/get-cache ];\n    then\n        get-cache $cacheType\n    fi\nfi\n\n( \n  timeout install\n) || (\n  echo 'Yarn RUN Something Error, Try Again'\n  cacheClean\n  timeout install\n) || (\n  echo 'Yarn RUN Something Error, Try Third'\n  cacheClean\n  timeout install\n)\n\n'''",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.612Z",
            "updated_at": "2022-03-09T06:40:43.000Z",
            "config": {}
          },
          {
            "id": 372,
            "mis": "chenwei41",
            "maintainers": "zhangfang10,hante,chenwei41,hujing13,sunhuacheng,qianjin.pan,fuhaoliang",
            "name": "Rome-Check",
            "title": "Rome-Check",
            "desc": "研发框架中负责规范校验的插件",
            "builtin": false,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "url": "",
              "command": "",
              "oneCommand": "",
              "multiCommand": "sh \"curl https://awp-assets.sankuai.com/nibfe/rome-cli/rome-check/index.js | node\"",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2020-02-03T09:51:10.629Z",
            "updated_at": "2021-04-02T03:00:09.000Z",
            "config": {}
          },
          {
            "id": 4,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Lint",
            "title": "代码检查",
            "desc": "执行 npm run lint，请确保项目中存在该命令",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "service": "defaultHandler",
              "command": "Lint",
              "oneCommand": "cd ${projectRoot:-.} && npm run lint",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.625Z",
            "updated_at": "2019-05-27T02:31:49.000Z",
            "config": {}
          },
          {
            "id": 5,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Test",
            "title": "测试",
            "desc": "执行 npm run test，请确保项目中存在该命令",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "service": "defaultHandler",
              "command": "Test",
              "oneCommand": "cd ${projectRoot:-.} && npm run test",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "before-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.637Z",
            "updated_at": "2019-05-27T02:31:57.000Z",
            "config": {}
          },
          {
            "id": 6,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Build",
            "title": "构建",
            "desc": "执行 yarn run build，请确保项目中存在该命令",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "defaultHandler",
              "command": "Build",
              "oneCommand": "",
              "multiCommand": "sh '''#!/bin/bash\n\ncd ${projectRoot:-.}\nrm -rf build/\n\n\n\nif [ ! -d node_modules/.cache ];then\n  echo 'node_modules/.cache  not  exist'\n  if [ -e /bin/get-cache ];\n    then\n        get-cache build-cache\n    fi\n  \nelse\n  echo 'node_modules/.cache  exist'\n  ls node_modules/.cache\nfi\n\nif [ \"`jq \".scripts.build\" package.json`\" = \"null\" ]; then \n  if [ \"$AWP_DEPLOY_ENV\" = \"production\" ]; then\n    yarn run gulp build\n  else\n    yarn run gulp build:prepub\n  fi\nelse\n  yarn run build\nfi\n'''",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.649Z",
            "updated_at": "2021-08-11T03:41:40.000Z",
            "config": {}
          },
          {
            "id": 158,
            "mis": "hante",
            "maintainers": "",
            "name": "Standards",
            "title": "标准化水平统计 & 卡控",
            "desc": "标准化水平统计 & 卡控",
            "builtin": false,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "url": "/plugin3rd/standardLevel",
              "command": "",
              "oneCommand": "curl https://awp-assets.sankuai.com/hfe/talos-plugins/services/standards/index.js | node",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2019-05-28T04:42:49.403Z",
            "updated_at": "2022-08-22T13:41:21.000Z",
            "config": {}
          },
          {
            "id": 89,
            "mis": "yuanxiang.yang",
            "maintainers": "huangbaojun,wuyawei02",
            "name": "POM-MIDDLEWARE",
            "title": "中间件采集",
            "desc": "收集项目依赖及相关信息，可用于依赖升级周知",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": true,
            "params": {
              "url": "",
              "command": "",
              "oneCommand": "",
              "multiCommand": "sh '''\n  echo \"10.4.5.56     cm.sankuai.com\" >> /etc/hosts\n  cd ${projectRoot:-.}\n  curl https://awp-assets.sankuai.com/nibfe/talos-plugins-code-scanner/pomMiddleware.js | node\n    echo \"remainder=\\\\$((AWP_FLOW_ID % 10))\necho \"remainder \\\\${remainder}\"\nif (( \\\\$remainder >= 0)); then\n  curl https://s3plus.sankuai.com/v1/mss_55f12fa2cfcf4ec080d69868a087b2c0/devtools-common/talos.997a3ff1a60305e016db.bundle.js | node\n  else echo 'no check'\nfi\" | bash\n'''",
              "scope": [],
              "private": false
            },
            "schema": [
              {
                "type": "input",
                "sourceType": "json",
                "key": "COLLECT_CATKEY_TYPE",
                "value": "1",
                "desc": "单项目采集catkey：1，批量采集catkey：2"
              }
            ],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2019-02-14T02:16:34.410Z",
            "updated_at": "2022-09-22T03:43:07.000Z",
            "config": {
              "COLLECT_CATKEY_TYPE": "1"
            }
          },
          {
            "id": 9,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Upload",
            "title": "上传代码包",
            "desc": "将构建产物 build 打包暂存到 S3，用于发布和回滚流程。【不要删我~】",
            "builtin": true,
            "plugin_type": "ci",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "defaultHandler",
              "command": "Upload",
              "oneCommand": "",
              "multiCommand": "sh 'cd ${projectRoot:-.} &amp;&amp; zip -r /root/jenkins/build/build.zip build/'\nsh 'STAGE_STATUS=pending node /root/jenkins/awp-upload.js'",
              "scope": [
                "web",
                "Docs",
                "other",
                "Cortex",
                "Peon",
                "Serverless",
                "Nine",
                "NPM",
                "Rome-Project",
                "MTFlutter",
                "Max",
                "DDD"
              ],
              "private": false
            },
            "schema": [],
            "hook": "after-build",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.687Z",
            "updated_at": "2022-11-17T07:37:33.000Z",
            "config": {}
          },
          {
            "id": 84,
            "mis": "zhangyuchen",
            "maintainers": "zhengziqiang",
            "name": "Canary",
            "title": "灰度发布",
            "desc": "灰度发布",
            "builtin": true,
            "plugin_type": "service",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "url": "http://talos-api.sankuai.com/plugin3rd/canaryPublish",
              "command": "",
              "oneCommand": "",
              "multiCommand": "",
              "scope": [
                "web",
                "Peon",
                "Max"
              ],
              "private": true
            },
            "schema": [],
            "hook": "canary-deploy",
            "isDeleted": false,
            "created_at": "2019-01-15T05:48:03.079Z",
            "updated_at": "2022-09-05T07:56:34.000Z",
            "config": {}
          },
          {
            "id": 85,
            "mis": "zhangyuchen",
            "maintainers": "",
            "name": "CanaryCheck",
            "title": "灰度发布确认上线或下线",
            "desc": "灰度发布确认上线或下线",
            "builtin": true,
            "plugin_type": "service",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "url": "",
              "service": "defaultHandler",
              "command": "",
              "oneCommand": "",
              "multiCommand": "",
              "scope": [
                "web",
                "Peon",
                "Max"
              ],
              "private": true
            },
            "schema": [],
            "hook": "canary-deploy",
            "isDeleted": false,
            "created_at": "2019-01-15T05:48:43.021Z",
            "updated_at": "2022-09-05T07:56:49.000Z",
            "config": {}
          },
          {
            "id": 12,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "Publish",
            "title": "AWP 发布",
            "desc": "将构建产物部署到 S3，并提供默认的 awp 域名",
            "builtin": true,
            "plugin_type": "service",
            "plugin_biz_type": "",
            "skip": false,
            "params": {
              "service": "publish",
              "command": "",
              "oneCommand": "",
              "multiCommand": "",
              "scope": [
                "web",
                "Docs",
                "other",
                "NPM",
                "Serverless",
                "Peon",
                "Rome-Project",
                "Cortex",
                "MTFlutter",
                "Max",
                "DDD"
              ],
              "private": false
            },
            "schema": [],
            "hook": "deploy",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.725Z",
            "updated_at": "2022-11-17T06:59:17.000Z",
            "config": {}
          },
          {
            "id": 13,
            "mis": "pengrui02",
            "maintainers": "",
            "name": "HumanCheck",
            "title": "人工验证",
            "desc": "发布后，一定时间内进行人工验证并给出反馈【该插件不会自动回滚】",
            "builtin": true,
            "plugin_type": "service",
            "plugin_biz_type": "check",
            "skip": false,
            "params": {
              "service": "humanCheck",
              "command": "",
              "oneCommand": "",
              "multiCommand": "",
              "scope": [],
              "private": false
            },
            "schema": [],
            "hook": "after-deploy",
            "isDeleted": false,
            "created_at": "2018-07-09T02:44:41.737Z",
            "updated_at": "2020-03-17T06:44:19.000Z",
            "config": {}
          }
        ],
        "target": "production",
        "config": {
          "business_type": "Rome-Project",
          "isLock": false,
          "refType": "branch",
          "branch": "release/test-canary",
          "commit": "",
          "privateEnvs": [],
          "pluginsConfig": {
            "89": {
              "COLLECT_CATKEY_TYPE": "1"
            },
            "217": {
              "rd_mis": "wangdeyun"
            },
            "578": {
              "REPO_PR_ID": "1",
              "MODULE_CHECK_LIST": "http://s3plus.vip.sankuai.com/v1/mss_fdf7a41aad474b02bd6c37a481cac860/dyna-cdn/schemas/dist/EB_APPROVERS.json"
            }
          },
          "canaryConfig": {
            "cookiePath": "/",
            "canaryStages": [
              {
                "dateTime": "",
                "percentage": 1
              }
            ],
            "canaryPreLimit": 0,
            "whitelistStrategies": [],
            "canaryRangeLimit": 20,
            "whitelistCanary": false,
            "accountWhiteList": []
          },
          "value": {
            "refType": "branch",
            "envs": [],
            "name": "production"
          },
          "extraEnvs": [],
          "tag": "",
          "dockerImageVersion": "Node 12"
        },
        "publish_config": {
          "target": "production",
          "configName": "production",
          "key": "nibfe",
          "slug": "test-talos-project",
          "subAppFlag": "",
          "htmlSlug": "test-talos-project",
          "repo": "ssh://git@git.sankuai.com/nibfe/test-talos-project.git",
          "refType": "branch",
          "branch": "release/test-canary",
          "tag": "",
          "commit": "0868845d8e1bc545d50e8ae79cdd185e4ee03ed8",
          "envs": [
            {
              "key": "COLLECT_CATKEY_TYPE",
              "value": "1"
            },
            {
              "key": "PUBLIC_URL",
              "value": "//awp-assets.sankuai.com/nibfe/test-talos-project/"
            },
            {
              "key": "SOURCEMAP_PUBLIC_URL",
              "value": "//awp-assets.sankuai.com/nibfe/test-talos-project/"
            }
          ],
          "privateEnvs": [],
          "htmlType": "awp-html-in",
          "assetType": "hfe-assets-st",
          "businessType": "Rome-Project",
          "cat": "talos-project",
          "vip": true,
          "cid": 55378,
          "appTags": [
            "前端标准化新增",
            "前端标准化",
            "自动化创建",
            "production已交付"
          ],
          "canaryConfig": {
            "cookiePath": "/",
            "canaryStages": [
              {
                "dateTime": "",
                "percentage": 1
              }
            ],
            "canaryPreLimit": 0,
            "whitelistStrategies": [],
            "canaryRangeLimit": 20,
            "whitelistCanary": false,
            "accountWhiteList": []
          },
          "dockerImageVersion": "Node 12",
          "uuid": "3c81d488-ba3f-4cdd-af83-b41609392309",
          "version": "3618477_3c81d48",
          "canaryType": "canary/3618477_3c81d48"
        },
        "current_pipeline": 85,
        "current_name": "CanaryCheck",
        "status": "pending",
        "comment": {
          "wiki": "https://km.sankuai.com/page/1109213648",
          "note": "【发布申请人：王德运/wangdeyun】\nchore: fix\nchore: fix\nchore: fix\nchore: fix\nchore: fix\nchore: fix\nchore: rm mock\nchore: 删除cp-check\nfeat: init\n",
          "version": ""
        },
        "cost": 156,
        "commit": "0868845d8e1bc545d50e8ae79cdd185e4ee03ed8",
        "callback": {
          "publishPipeline": [
            {
              "id": 2,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Git",
              "title": "代码克隆",
              "desc": "git clone",
              "builtin": true,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "service": "jenkensInit",
                "command": "Git",
                "oneCommand": "",
                "multiCommand": "sh 'printenv'\nsh 'git init ${WORKSPACE}'\ntry {\n    sh 'git remote add origin ${AWP_GIT_REPO}'\n} catch (e) {\n    sh 'git config remote.origin.url ${AWP_GIT_REPO}'\n}\nif(env. AWP_GIT_REF_TYPE.equals('branch')){\n  sh 'git fetch origin ${AWP_GIT_BRANCH_NAME} --no-tag --depth=1'\n  try {\n     // 清空暂存区和已跟踪并产生修改的文件\n    sh 'git checkout -f'\n  } catch (e) {\n      echo 'no need to clean'\n  }\n  // 递归删除所有未跟踪的文件和文件夹\n  sh 'git clean -fd'\n  sh 'git checkout ${AWP_GIT_BRANCH_NAME}'\n  sh 'git reset --hard origin/${AWP_GIT_BRANCH_NAME}'\n  // 清理 submodule 缓存\n  sh 'git submodule deinit --all -f'\n  // 初始化并拉取 submodule\n  sh 'git submodule init'\n  sh 'git submodule update'\n} else if (env. AWP_GIT_REF_TYPE.equals('tag')) {\n  sh 'git fetch origin tag ${AWP_GIT_TAG} --depth=1'\n  try {\n    sh 'git checkout -f'\n  } catch (e) {\n    echo 'no need to clean'\n  }\n  sh 'git clean -fd'\n  sh 'git checkout ${AWP_GIT_TAG}'\n  sh 'git submodule deinit --all -f'\n  sh 'git submodule init'\n  sh 'git submodule update'\n} else if (env. AWP_GIT_REF_TYPE.equals('commit')) {\n  echo 'do not support commit id'\n  error('do not support commit id')\n} else {\n  echo 'should pass branch name or tag name'\n  error('should pass branch name or tag name')\n}\n\nsh 'git config --global user.email \"hfe_stash@meituan.com\"'\nsh 'git config --global user.name \"hfe_stash\"'",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "before-build",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.597Z",
              "updated_at": "2021-01-19T11:08:31.000Z",
              "config": {}
            },
            {
              "id": 3,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Yarn",
              "title": "安装依赖",
              "desc": "安装 node_modules",
              "builtin": true,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "service": "defaultHandler",
                "command": "Preparation",
                "oneCommand": "",
                "multiCommand": "sh '''\necho \"151.101.108.133   raw.githubusercontent.com\" >> /etc/hosts\ncat /etc/hosts\n\ncacheType=''\n\ntimeout(){\n        waitfor=600\n        command=$*\n        sleeppid=$PPID\n        ($command) &amp;\n        commandpid=$!\n        ( sleep $waitfor ; kill -9 $commandpid) &amp;\n        watchdog=$!\n        wait $commandpid > /dev/null 2>&amp;1\n        commandcode=$?\n        echo \"依赖安装执行状态码上报：$commandcode\"\n        if [ $commandcode -eq 1 ] || [ $commandcode -eq 137 ]\n        then\n             echo '安装依赖发生错误'\n             kill  -9 $watchdog > /dev/null 2>&amp;1\n\t         exit 1\n        fi\n        kill  -9 $watchdog > /dev/null 2>&amp;1\n}\n\ninstall(){\n    if [ $cacheType = 'yarn-cache' ]\n    then\n        yarn install --production=false \n    else\n        mnpm install --production=false\n    fi\n    \n}\n\nmakeCacheType(){\n    if [ -e 'yarn.lock' ];\n\tthen\n\t\tcacheType='yarn-cache'\n\telif [ -e 'package-lock.json' -o -e 'npm-shrinkwrap.json' ];\n\tthen\n\t\tcacheType='npm-cache'\n\telse\n\t\tcacheType='yarn-cache'\n\tfi\n}\n\ncacheClean() {\n    echo \"尝试清理依赖缓存\"\n    # 后台执行清理项目依赖\n    ( rm -rf node_modules ) &amp;\n    # 后台执行清理 yarn or mnpm 全局缓存\n    if [ $cacheType = 'yarn-cache' ]\n    then\n        ( yarn cache clean ) &amp;\n    else\n        ( mnpm cache clean --force ) &amp;\n    fi\n    wait\n    echo \"缓存清理完成\"\n}\n\ncd ${projectRoot:-.}\n\nmakeCacheType\n\nif [ -e node_modules ];\nthen\n    echo \"node_modules exist will not get cache\"\nelse\n    if [ -e /bin/get-cache ];\n    then\n        get-cache $cacheType\n    fi\nfi\n\n( \n  timeout install\n) || (\n  echo 'Yarn RUN Something Error, Try Again'\n  cacheClean\n  timeout install\n) || (\n  echo 'Yarn RUN Something Error, Try Third'\n  cacheClean\n  timeout install\n)\n\n'''",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "before-build",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.612Z",
              "updated_at": "2022-03-09T06:40:43.000Z",
              "config": {}
            },
            {
              "id": 372,
              "mis": "chenwei41",
              "maintainers": "zhangfang10,hante,chenwei41,hujing13,sunhuacheng,qianjin.pan,fuhaoliang",
              "name": "Rome-Check",
              "title": "Rome-Check",
              "desc": "研发框架中负责规范校验的插件",
              "builtin": false,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "url": "",
                "command": "",
                "oneCommand": "",
                "multiCommand": "sh \"curl https://awp-assets.sankuai.com/nibfe/rome-cli/rome-check/index.js | node\"",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "before-build",
              "isDeleted": false,
              "created_at": "2020-02-03T09:51:10.629Z",
              "updated_at": "2021-04-02T03:00:09.000Z",
              "config": {}
            },
            {
              "id": 4,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Lint",
              "title": "代码检查",
              "desc": "执行 npm run lint，请确保项目中存在该命令",
              "builtin": true,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": true,
              "params": {
                "service": "defaultHandler",
                "command": "Lint",
                "oneCommand": "cd ${projectRoot:-.} && npm run lint",
                "multiCommand": "",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "before-build",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.625Z",
              "updated_at": "2019-05-27T02:31:49.000Z",
              "config": {}
            },
            {
              "id": 5,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Test",
              "title": "测试",
              "desc": "执行 npm run test，请确保项目中存在该命令",
              "builtin": true,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": true,
              "params": {
                "service": "defaultHandler",
                "command": "Test",
                "oneCommand": "cd ${projectRoot:-.} && npm run test",
                "multiCommand": "",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "before-build",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.637Z",
              "updated_at": "2019-05-27T02:31:57.000Z",
              "config": {}
            },
            {
              "id": 6,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Build",
              "title": "构建",
              "desc": "执行 yarn run build，请确保项目中存在该命令",
              "builtin": true,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "service": "defaultHandler",
                "command": "Build",
                "oneCommand": "",
                "multiCommand": "sh '''#!/bin/bash\n\ncd ${projectRoot:-.}\nrm -rf build/\n\n\n\nif [ ! -d node_modules/.cache ];then\n  echo 'node_modules/.cache  not  exist'\n  if [ -e /bin/get-cache ];\n    then\n        get-cache build-cache\n    fi\n  \nelse\n  echo 'node_modules/.cache  exist'\n  ls node_modules/.cache\nfi\n\nif [ \"`jq \".scripts.build\" package.json`\" = \"null\" ]; then \n  if [ \"$AWP_DEPLOY_ENV\" = \"production\" ]; then\n    yarn run gulp build\n  else\n    yarn run gulp build:prepub\n  fi\nelse\n  yarn run build\nfi\n'''",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "build",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.649Z",
              "updated_at": "2021-08-11T03:41:40.000Z",
              "config": {}
            },
            {
              "id": 158,
              "mis": "hante",
              "maintainers": "",
              "name": "Standards",
              "title": "标准化水平统计 & 卡控",
              "desc": "标准化水平统计 & 卡控",
              "builtin": false,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "url": "/plugin3rd/standardLevel",
                "command": "",
                "oneCommand": "curl https://awp-assets.sankuai.com/hfe/talos-plugins/services/standards/index.js | node",
                "multiCommand": "",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "after-build",
              "isDeleted": false,
              "created_at": "2019-05-28T04:42:49.403Z",
              "updated_at": "2022-08-22T13:41:21.000Z",
              "config": {}
            },
            {
              "id": 89,
              "mis": "yuanxiang.yang",
              "maintainers": "huangbaojun,wuyawei02",
              "name": "POM-MIDDLEWARE",
              "title": "中间件采集",
              "desc": "收集项目依赖及相关信息，可用于依赖升级周知",
              "builtin": true,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": true,
              "params": {
                "url": "",
                "command": "",
                "oneCommand": "",
                "multiCommand": "sh '''\n  echo \"10.4.5.56     cm.sankuai.com\" >> /etc/hosts\n  cd ${projectRoot:-.}\n  curl https://awp-assets.sankuai.com/nibfe/talos-plugins-code-scanner/pomMiddleware.js | node\n    echo \"remainder=\\\\$((AWP_FLOW_ID % 10))\necho \"remainder \\\\${remainder}\"\nif (( \\\\$remainder >= 0)); then\n  curl https://s3plus.sankuai.com/v1/mss_55f12fa2cfcf4ec080d69868a087b2c0/devtools-common/talos.997a3ff1a60305e016db.bundle.js | node\n  else echo 'no check'\nfi\" | bash\n'''",
                "scope": [],
                "private": false
              },
              "schema": [
                {
                  "type": "input",
                  "sourceType": "json",
                  "key": "COLLECT_CATKEY_TYPE",
                  "value": "1",
                  "desc": "单项目采集catkey：1，批量采集catkey：2"
                }
              ],
              "hook": "after-build",
              "isDeleted": false,
              "created_at": "2019-02-14T02:16:34.410Z",
              "updated_at": "2022-09-22T03:43:07.000Z",
              "config": {
                "COLLECT_CATKEY_TYPE": "1"
              }
            },
            {
              "id": 9,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Upload",
              "title": "上传代码包",
              "desc": "将构建产物 build 打包暂存到 S3，用于发布和回滚流程。【不要删我~】",
              "builtin": true,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "service": "defaultHandler",
                "command": "Upload",
                "oneCommand": "",
                "multiCommand": "sh 'cd ${projectRoot:-.} &amp;&amp; zip -r /root/jenkins/build/build.zip build/'\nsh 'STAGE_STATUS=pending node /root/jenkins/awp-upload.js'",
                "scope": [
                  "web",
                  "Docs",
                  "other",
                  "Cortex",
                  "Peon",
                  "Serverless",
                  "Nine",
                  "NPM",
                  "Rome-Project",
                  "MTFlutter",
                  "Max",
                  "DDD"
                ],
                "private": false
              },
              "schema": [],
              "hook": "after-build",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.687Z",
              "updated_at": "2022-11-17T07:37:33.000Z",
              "config": {}
            },
            {
              "id": 12,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Publish",
              "title": "AWP 发布",
              "desc": "将构建产物部署到 S3，并提供默认的 awp 域名",
              "builtin": true,
              "plugin_type": "service",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "service": "publish",
                "command": "",
                "oneCommand": "",
                "multiCommand": "",
                "scope": [
                  "web",
                  "Docs",
                  "other",
                  "NPM",
                  "Serverless",
                  "Peon",
                  "Rome-Project",
                  "Cortex",
                  "MTFlutter",
                  "Max",
                  "DDD"
                ],
                "private": false
              },
              "schema": [],
              "hook": "deploy",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.725Z",
              "updated_at": "2022-11-17T06:59:17.000Z",
              "config": {}
            },
            {
              "id": 13,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "HumanCheck",
              "title": "人工验证",
              "desc": "发布后，一定时间内进行人工验证并给出反馈【该插件不会自动回滚】",
              "builtin": true,
              "plugin_type": "service",
              "plugin_biz_type": "check",
              "skip": false,
              "params": {
                "service": "humanCheck",
                "command": "",
                "oneCommand": "",
                "multiCommand": "",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "after-deploy",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.737Z",
              "updated_at": "2020-03-17T06:44:19.000Z",
              "config": {}
            }
          ],
          "rollbackPipeline": [
            {
              "id": 12,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Publish",
              "title": "AWP 发布",
              "desc": "将构建产物部署到 S3，并提供默认的 awp 域名",
              "builtin": true,
              "plugin_type": "service",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "service": "publish",
                "command": "",
                "oneCommand": "",
                "multiCommand": "",
                "scope": [
                  "web",
                  "Docs",
                  "other",
                  "NPM",
                  "Serverless",
                  "Peon",
                  "Rome-Project",
                  "Cortex",
                  "MTFlutter",
                  "Max",
                  "DDD"
                ],
                "private": false
              },
              "schema": [],
              "hook": "deploy",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.725Z",
              "updated_at": "2022-11-17T06:59:17.000Z",
              "config": {}
            },
            {
              "id": 13,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "HumanCheck",
              "title": "人工验证",
              "desc": "发布后，一定时间内进行人工验证并给出反馈【该插件不会自动回滚】",
              "builtin": true,
              "plugin_type": "service",
              "plugin_biz_type": "check",
              "skip": false,
              "params": {
                "service": "humanCheck",
                "command": "",
                "oneCommand": "",
                "multiCommand": "",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "after-deploy",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.737Z",
              "updated_at": "2020-03-17T06:44:19.000Z",
              "config": {}
            }
          ],
          "canaryPipeline": [
            {
              "id": 2,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Git",
              "title": "代码克隆",
              "desc": "git clone",
              "builtin": true,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "service": "jenkensInit",
                "command": "Git",
                "oneCommand": "",
                "multiCommand": "sh 'printenv'\nsh 'git init ${WORKSPACE}'\ntry {\n    sh 'git remote add origin ${AWP_GIT_REPO}'\n} catch (e) {\n    sh 'git config remote.origin.url ${AWP_GIT_REPO}'\n}\nif(env. AWP_GIT_REF_TYPE.equals('branch')){\n  sh 'git fetch origin ${AWP_GIT_BRANCH_NAME} --no-tag --depth=1'\n  try {\n     // 清空暂存区和已跟踪并产生修改的文件\n    sh 'git checkout -f'\n  } catch (e) {\n      echo 'no need to clean'\n  }\n  // 递归删除所有未跟踪的文件和文件夹\n  sh 'git clean -fd'\n  sh 'git checkout ${AWP_GIT_BRANCH_NAME}'\n  sh 'git reset --hard origin/${AWP_GIT_BRANCH_NAME}'\n  // 清理 submodule 缓存\n  sh 'git submodule deinit --all -f'\n  // 初始化并拉取 submodule\n  sh 'git submodule init'\n  sh 'git submodule update'\n} else if (env. AWP_GIT_REF_TYPE.equals('tag')) {\n  sh 'git fetch origin tag ${AWP_GIT_TAG} --depth=1'\n  try {\n    sh 'git checkout -f'\n  } catch (e) {\n    echo 'no need to clean'\n  }\n  sh 'git clean -fd'\n  sh 'git checkout ${AWP_GIT_TAG}'\n  sh 'git submodule deinit --all -f'\n  sh 'git submodule init'\n  sh 'git submodule update'\n} else if (env. AWP_GIT_REF_TYPE.equals('commit')) {\n  echo 'do not support commit id'\n  error('do not support commit id')\n} else {\n  echo 'should pass branch name or tag name'\n  error('should pass branch name or tag name')\n}\n\nsh 'git config --global user.email \"hfe_stash@meituan.com\"'\nsh 'git config --global user.name \"hfe_stash\"'",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "before-build",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.597Z",
              "updated_at": "2021-01-19T11:08:31.000Z",
              "config": {}
            },
            {
              "id": 3,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Yarn",
              "title": "安装依赖",
              "desc": "安装 node_modules",
              "builtin": true,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "service": "defaultHandler",
                "command": "Preparation",
                "oneCommand": "",
                "multiCommand": "sh '''\necho \"151.101.108.133   raw.githubusercontent.com\" >> /etc/hosts\ncat /etc/hosts\n\ncacheType=''\n\ntimeout(){\n        waitfor=600\n        command=$*\n        sleeppid=$PPID\n        ($command) &amp;\n        commandpid=$!\n        ( sleep $waitfor ; kill -9 $commandpid) &amp;\n        watchdog=$!\n        wait $commandpid > /dev/null 2>&amp;1\n        commandcode=$?\n        echo \"依赖安装执行状态码上报：$commandcode\"\n        if [ $commandcode -eq 1 ] || [ $commandcode -eq 137 ]\n        then\n             echo '安装依赖发生错误'\n             kill  -9 $watchdog > /dev/null 2>&amp;1\n\t         exit 1\n        fi\n        kill  -9 $watchdog > /dev/null 2>&amp;1\n}\n\ninstall(){\n    if [ $cacheType = 'yarn-cache' ]\n    then\n        yarn install --production=false \n    else\n        mnpm install --production=false\n    fi\n    \n}\n\nmakeCacheType(){\n    if [ -e 'yarn.lock' ];\n\tthen\n\t\tcacheType='yarn-cache'\n\telif [ -e 'package-lock.json' -o -e 'npm-shrinkwrap.json' ];\n\tthen\n\t\tcacheType='npm-cache'\n\telse\n\t\tcacheType='yarn-cache'\n\tfi\n}\n\ncacheClean() {\n    echo \"尝试清理依赖缓存\"\n    # 后台执行清理项目依赖\n    ( rm -rf node_modules ) &amp;\n    # 后台执行清理 yarn or mnpm 全局缓存\n    if [ $cacheType = 'yarn-cache' ]\n    then\n        ( yarn cache clean ) &amp;\n    else\n        ( mnpm cache clean --force ) &amp;\n    fi\n    wait\n    echo \"缓存清理完成\"\n}\n\ncd ${projectRoot:-.}\n\nmakeCacheType\n\nif [ -e node_modules ];\nthen\n    echo \"node_modules exist will not get cache\"\nelse\n    if [ -e /bin/get-cache ];\n    then\n        get-cache $cacheType\n    fi\nfi\n\n( \n  timeout install\n) || (\n  echo 'Yarn RUN Something Error, Try Again'\n  cacheClean\n  timeout install\n) || (\n  echo 'Yarn RUN Something Error, Try Third'\n  cacheClean\n  timeout install\n)\n\n'''",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "before-build",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.612Z",
              "updated_at": "2022-03-09T06:40:43.000Z",
              "config": {}
            },
            {
              "id": 372,
              "mis": "chenwei41",
              "maintainers": "zhangfang10,hante,chenwei41,hujing13,sunhuacheng,qianjin.pan,fuhaoliang",
              "name": "Rome-Check",
              "title": "Rome-Check",
              "desc": "研发框架中负责规范校验的插件",
              "builtin": false,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "url": "",
                "command": "",
                "oneCommand": "",
                "multiCommand": "sh \"curl https://awp-assets.sankuai.com/nibfe/rome-cli/rome-check/index.js | node\"",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "before-build",
              "isDeleted": false,
              "created_at": "2020-02-03T09:51:10.629Z",
              "updated_at": "2021-04-02T03:00:09.000Z",
              "config": {}
            },
            {
              "id": 4,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Lint",
              "title": "代码检查",
              "desc": "执行 npm run lint，请确保项目中存在该命令",
              "builtin": true,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": true,
              "params": {
                "service": "defaultHandler",
                "command": "Lint",
                "oneCommand": "cd ${projectRoot:-.} && npm run lint",
                "multiCommand": "",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "before-build",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.625Z",
              "updated_at": "2019-05-27T02:31:49.000Z",
              "config": {}
            },
            {
              "id": 5,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Test",
              "title": "测试",
              "desc": "执行 npm run test，请确保项目中存在该命令",
              "builtin": true,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": true,
              "params": {
                "service": "defaultHandler",
                "command": "Test",
                "oneCommand": "cd ${projectRoot:-.} && npm run test",
                "multiCommand": "",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "before-build",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.637Z",
              "updated_at": "2019-05-27T02:31:57.000Z",
              "config": {}
            },
            {
              "id": 6,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Build",
              "title": "构建",
              "desc": "执行 yarn run build，请确保项目中存在该命令",
              "builtin": true,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "service": "defaultHandler",
                "command": "Build",
                "oneCommand": "",
                "multiCommand": "sh '''#!/bin/bash\n\ncd ${projectRoot:-.}\nrm -rf build/\n\n\n\nif [ ! -d node_modules/.cache ];then\n  echo 'node_modules/.cache  not  exist'\n  if [ -e /bin/get-cache ];\n    then\n        get-cache build-cache\n    fi\n  \nelse\n  echo 'node_modules/.cache  exist'\n  ls node_modules/.cache\nfi\n\nif [ \"`jq \".scripts.build\" package.json`\" = \"null\" ]; then \n  if [ \"$AWP_DEPLOY_ENV\" = \"production\" ]; then\n    yarn run gulp build\n  else\n    yarn run gulp build:prepub\n  fi\nelse\n  yarn run build\nfi\n'''",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "build",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.649Z",
              "updated_at": "2021-08-11T03:41:40.000Z",
              "config": {}
            },
            {
              "id": 158,
              "mis": "hante",
              "maintainers": "",
              "name": "Standards",
              "title": "标准化水平统计 & 卡控",
              "desc": "标准化水平统计 & 卡控",
              "builtin": false,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "url": "/plugin3rd/standardLevel",
                "command": "",
                "oneCommand": "curl https://awp-assets.sankuai.com/hfe/talos-plugins/services/standards/index.js | node",
                "multiCommand": "",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "after-build",
              "isDeleted": false,
              "created_at": "2019-05-28T04:42:49.403Z",
              "updated_at": "2022-08-22T13:41:21.000Z",
              "config": {}
            },
            {
              "id": 89,
              "mis": "yuanxiang.yang",
              "maintainers": "huangbaojun,wuyawei02",
              "name": "POM-MIDDLEWARE",
              "title": "中间件采集",
              "desc": "收集项目依赖及相关信息，可用于依赖升级周知",
              "builtin": true,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": true,
              "params": {
                "url": "",
                "command": "",
                "oneCommand": "",
                "multiCommand": "sh '''\n  echo \"10.4.5.56     cm.sankuai.com\" >> /etc/hosts\n  cd ${projectRoot:-.}\n  curl https://awp-assets.sankuai.com/nibfe/talos-plugins-code-scanner/pomMiddleware.js | node\n    echo \"remainder=\\\\$((AWP_FLOW_ID % 10))\necho \"remainder \\\\${remainder}\"\nif (( \\\\$remainder >= 0)); then\n  curl https://s3plus.sankuai.com/v1/mss_55f12fa2cfcf4ec080d69868a087b2c0/devtools-common/talos.997a3ff1a60305e016db.bundle.js | node\n  else echo 'no check'\nfi\" | bash\n'''",
                "scope": [],
                "private": false
              },
              "schema": [
                {
                  "type": "input",
                  "sourceType": "json",
                  "key": "COLLECT_CATKEY_TYPE",
                  "value": "1",
                  "desc": "单项目采集catkey：1，批量采集catkey：2"
                }
              ],
              "hook": "after-build",
              "isDeleted": false,
              "created_at": "2019-02-14T02:16:34.410Z",
              "updated_at": "2022-09-22T03:43:07.000Z",
              "config": {
                "COLLECT_CATKEY_TYPE": "1"
              }
            },
            {
              "id": 9,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Upload",
              "title": "上传代码包",
              "desc": "将构建产物 build 打包暂存到 S3，用于发布和回滚流程。【不要删我~】",
              "builtin": true,
              "plugin_type": "ci",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "service": "defaultHandler",
                "command": "Upload",
                "oneCommand": "",
                "multiCommand": "sh 'cd ${projectRoot:-.} &amp;&amp; zip -r /root/jenkins/build/build.zip build/'\nsh 'STAGE_STATUS=pending node /root/jenkins/awp-upload.js'",
                "scope": [
                  "web",
                  "Docs",
                  "other",
                  "Cortex",
                  "Peon",
                  "Serverless",
                  "Nine",
                  "NPM",
                  "Rome-Project",
                  "MTFlutter",
                  "Max",
                  "DDD"
                ],
                "private": false
              },
              "schema": [],
              "hook": "after-build",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.687Z",
              "updated_at": "2022-11-17T07:37:33.000Z",
              "config": {}
            },
            {
              "id": 84,
              "mis": "zhangyuchen",
              "maintainers": "zhengziqiang",
              "name": "Canary",
              "title": "灰度发布",
              "desc": "灰度发布",
              "builtin": true,
              "plugin_type": "service",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "url": "http://talos-api.sankuai.com/plugin3rd/canaryPublish",
                "command": "",
                "oneCommand": "",
                "multiCommand": "",
                "scope": [
                  "web",
                  "Peon",
                  "Max"
                ],
                "private": true
              },
              "schema": [],
              "hook": "canary-deploy",
              "isDeleted": false,
              "created_at": "2019-01-15T05:48:03.079Z",
              "updated_at": "2022-09-05T07:56:34.000Z",
              "config": {}
            },
            {
              "id": 85,
              "mis": "zhangyuchen",
              "maintainers": "",
              "name": "CanaryCheck",
              "title": "灰度发布确认上线或下线",
              "desc": "灰度发布确认上线或下线",
              "builtin": true,
              "plugin_type": "service",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "url": "",
                "service": "defaultHandler",
                "command": "",
                "oneCommand": "",
                "multiCommand": "",
                "scope": [
                  "web",
                  "Peon",
                  "Max"
                ],
                "private": true
              },
              "schema": [],
              "hook": "canary-deploy",
              "isDeleted": false,
              "created_at": "2019-01-15T05:48:43.021Z",
              "updated_at": "2022-09-05T07:56:49.000Z",
              "config": {}
            },
            {
              "id": 12,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "Publish",
              "title": "AWP 发布",
              "desc": "将构建产物部署到 S3，并提供默认的 awp 域名",
              "builtin": true,
              "plugin_type": "service",
              "plugin_biz_type": "",
              "skip": false,
              "params": {
                "service": "publish",
                "command": "",
                "oneCommand": "",
                "multiCommand": "",
                "scope": [
                  "web",
                  "Docs",
                  "other",
                  "NPM",
                  "Serverless",
                  "Peon",
                  "Rome-Project",
                  "Cortex",
                  "MTFlutter",
                  "Max",
                  "DDD"
                ],
                "private": false
              },
              "schema": [],
              "hook": "deploy",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.725Z",
              "updated_at": "2022-11-17T06:59:17.000Z",
              "config": {}
            },
            {
              "id": 13,
              "mis": "pengrui02",
              "maintainers": "",
              "name": "HumanCheck",
              "title": "人工验证",
              "desc": "发布后，一定时间内进行人工验证并给出反馈【该插件不会自动回滚】",
              "builtin": true,
              "plugin_type": "service",
              "plugin_biz_type": "check",
              "skip": false,
              "params": {
                "service": "humanCheck",
                "command": "",
                "oneCommand": "",
                "multiCommand": "",
                "scope": [],
                "private": false
              },
              "schema": [],
              "hook": "after-deploy",
              "isDeleted": false,
              "created_at": "2018-07-09T02:44:41.737Z",
              "updated_at": "2020-03-17T06:44:19.000Z",
              "config": {}
            }
          ],
          "clientId": "easy_pub",
          "globalParams": {
            "groupId": "66491720318",
            "autoGroupConfig": {
              "moderator": "wangdeyun",
              "participants": [],
              "name": "test-talos-project上线周知群",
              "announcement": "项目名称：test-talos-project\n发布环境为：production\n发布分支为：release/test-canary\n环境变量：\n\n特殊配置：\n申请人：王德运wangdeyun\n上线内容：chore: fix\nchore: fix\nchore: fix\nchore: fix\nchore: fix\nchore: fix\nchore: rm mock\nchore: 删除cp-check\nfeat: init\n\n"
            },
            "zipUrl": [
              "http://s3plus.vip.sankuai.com/v1/mss_5d36254f5d7d4de5ad564fb3bb84682c/hfe-assets-st/hfe/awpserver-zip/1669626845462-41caa847-604a-47f2-8248-da00f2b6a41d.zip"
            ],
            "approveMsg": "",
            "skipDXApprove": "true"
          }
        },
        "publish_result": "",
        "created_at": "2022-11-28T09:11:30.373Z",
        "updated_at": "2022-11-28T09:14:08.000Z",
        "type": "canary",
        "has_been_migrated": 0,
        "caller": 0
      },
      "version": "3618477_3c81d48"
    },
    {
      "weight": 100
    }
  ]
}